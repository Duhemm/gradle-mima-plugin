plugins {
    id 'java-gradle-plugin'
    id 'scala'
    id "com.github.maiflai.scalatest" version "0.26"
    // Publishing to maven
    id 'maven-publish'
    id "com.gradle.plugin-publish" version "0.11.0"
}

group 'the.flowering.branches'
version '0.0.0'

repositories {
    mavenCentral()
}

dependencies {
    def mima = "0.7.0"
    def scalaLangVersion = 2.12
    implementation "com.typesafe:mima-core_$scalaLangVersion:$mima"
    testImplementation "org.scalatest:scalatest_$scalaLangVersion:3.1.1"
    implementation gradleApi()
    testRuntime 'com.vladsch.flexmark:flexmark-profile-pegdown:0.35.10'
}


task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    archiveClassifier = 'sources'
}

gradlePlugin {
    plugins {
        mima {
            id = "the.flowering.branches.mima-gradle-plugin"
            implementationClass = "the.flowering.branches.mima.MimaPlugin"
        }
    }
}

/*
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 *  v. 2.0. If a copy of the MPL was not distributed with this file,
 *  You can obtain one at https://mozilla.org/MPL/2.0/.
 */

// The configuration example below shows the minimum required properties
// configured to publish your plugin to the plugin portal
pluginBundle {
    website = "https://github.com/borissmidt/gradle-mima-plugin"
    vcsUrl = "https://github.com/borissmidt/gradle-mima-plugin"
    tags = ["mima", "scala", "binarycompatibility", "compatibility"]
    description = 'a plugin to run scala mima on your library to check backwards compatibility'
    plugins{
        mima{
            displayName = "Scala mima gradle plugin"
        }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourcesJar
        }
    }
}